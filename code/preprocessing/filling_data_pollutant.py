import pandas as pd

# Suppress future warnings
pd.set_option('future.no_silent_downcasting', True)

# Load the dataset
df = pd.read_csv("./intermediate files/formatted_file.csv")

# Group the data by country
grouped = df.groupby('Country', as_index=False)  # Avoid grouping columns in apply

# Define a custom function to fill missing values within each group
def fill_missing(group):
    # Fill missing values with the mean of the particular country for all years if the first entry is 0
    if group.iloc[0, 2:].eq(0).any():  # Check if any values (from third column onwards) are 0
        group.iloc[0, 2:] = group.iloc[:, 2:].replace(0, pd.NA).mean().fillna(0)  # Calculate mean, replace NAs, fill NaNs with 0
    # Forward fill missing values for subsequent entries (excluding the first row)
    group.iloc[1:, 2:] = group.iloc[1:, 2:].replace(0, pd.NA).ffill().fillna(0)  # Replace 0s with NAs, forward fill, fill NaNs with 0
    return group

# Apply the custom function to each group
filled_df = grouped.apply(fill_missing)

# Reset the index
filled_df.reset_index(drop=True, inplace=True)

# Save the preprocessed dataset
filled_df.to_csv("./intermediate files/preprocessed_pollutants_dataset.csv", index=False)
